model User {
  email          String           @unique
  name           String
  direccion      String?
  image          String?
  password       String
  carritos       Carrito[]
  tokenWhitelist TokenWhitelist[]
}

model Product {
  name              String       @id
  price             Int          @default(100)
  codigo            String
  stock             Int          @default(1)
  descripcionExtras Json
  createdAt         DateTime     @default(now())
  category          Category     @relation(fields: [categoryId], references: [name])
  categoryId        String
  distribuidor      Distribuidor @relation(fields: [distribuidorId], references: [name])
  distribuidorId    String
  carritos          Carrito[]
}

model Distribuidor {
  name      String    @id
  createdAt DateTime  @default(now())
  products  Product[]
}

model Carrito {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [email])
  userId    String
  product   Product  @relation(fields: [productId], references: [name])
  productId String
  cantidad             Int          @default(1) 
  createdAt DateTime @default(now())
}

model Category {
  name     String    @id
  products Product[]
}

model TokenWhitelist {
  jti          String   @id
  lastActivity DateTime
  user         User     @relation(fields: [userId], references: [email])
  userId       String
}



BEGIN;

ALTER TABLE "Product" ADD CONSTRAINT "check_description_extras"
  CHECK (
    CASE WHEN "categoryId" = 'libros' THEN  
    "descripcionExtras"->>'autor' IS NOT NULL AND 
    "descripcionExtras"->>'editorial' IS NOT NULL
    ELSE true END
  );

COMMIT;

BEGIN;

ALTER TABLE "Product" ADD CONSTRAINT "check_min_stock_product"
  CHECK (stock>=0);

ALTER TABLE "Carrito" ADD CONSTRAINT "check_min_stock_carrito"
  CHECK (cantidad>0);
COMMIT;


DATABASE_URL="postgresql://dpedrozo:123456789@localhost:5432/pruebaafa?schema=public"
PORT_APP=3000
JWT_SECRET="testSuperSecretToken"